How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    Using the diff -u command makes spotting differences between two versions of a
    file much easier, thus making finding and fixing bugs a lot easier in turn.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    It can enable you to easily restore your file to a previous version in case
    there was a bug in a recent change you've made. Plus, you get to have a history
    of your progres and learning process.

What do you think are the pros and cons of manually choosing when to create a commit,
like you do in Git, vs having versions automatically saved, like Google Docs does?

    Pros of manually choosing when to commit:
      * You can commit whenever you want, and the file history won't get cluttered with
        too many unnecessary commits.
      * It allows you to separate your commits into commits that would make logical sense.
    Cons of manually choosing when to commit:
      * You need to always remember to create commits.

    Pros of automatic version saves:
      * It saves you some work.
    Cons of automatic version saves:
      * Your content sometimes won't make sense, as it's possible that your file
        would be saved at points where you're in the middle of a sentence, for example.

Why do you think some version control systems, like Git, allow saving multiple files
in one commit, while others, like Google Docs, treat each file separately?

    Because those files may be closely related, like a webpage for example, with
    .html, .css, and .js files that all work together.

How can you use the commands git log and git diff to view the history of files?
    By using git log, you get a history of commits. To see the changes between two
    commits, you use git diff with two commit IDs you get from the git log command.

How might using version control make you more confident to make changes that could 
break something?

    Version control allows to revert to previous version of your file until you find
    exactly what caused your code to break.

Now that you have your workspace set up, what do you want to try using Git for?
    To start committing my own code to my repository that I had already created for 
    prjects I'll be working on.