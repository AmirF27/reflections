When would you want to use a remote repository rather than keeping all your work local?

    When you're collaborating with other people for example.

Why might you want to always pull changes manually rather than having Git automatically 
stay up-to-date with your remote repository?

    Because when working with others, you often don't want their changes to be pulled
    automatically to your local repository. When each person is working on a separate
    feature, for example, this might cause some unwanted issues.

Describe the differences between forks, clones, and branches. When would you use 
one instead of another?

     - Clones are a copy of the entire repository, along with the commit log. I would
       use them to clone a repository to my machine from either an online or local
       source.
     - Forks are a GitHub feature, and they basically clone someone else's repository
       to your account, all on their own servers. I would use them when I want to 
       contribute to someone's repository and I don't have permission to do so 
       (provided they agree to it).
     - Branches are just labels that are attached to certain commits. I would use 
       them when I want to work on an experimental feature, or some feature that 
       I don't want in the official version of the project just yet. Another case 
       where I would use branches is when I'm working with someone else on the same 
       project and each of us is working on a separate feature.

What is the benefit of having a copy of the last known state of the remote stored 
locally?

    There are some cases that you might not have internet access, so having a copy 
    of the last known state of the remote stored locally would allow to keep a reference
    of where you last left off. Another reason it's helpful is for Git to know whether 
    your local and remote copies are in sync.

How would you collaborate without using Git or GitHub? What would be easier, and 
what would be harder?

    Now that I've learned about Git and GitHub, it's hard to want to collaborate in 
    another way. However, if I was going to do it anyway, it would probably be via 
    email exchange, or perhaps C9 or some other platform. I can't see anything being 
    easier with this approach, but what would be harder is definitely the lack of 
    version control, lack of all the different extremely helpful features Git and 
    GitHub provide, and so on.

When would you want to make changes in a separate branch rather than directly in 
master? What benefits does each approach have?

    Using a separate branch allows you to show your changes to others for feedback 
    before merging the changes into the master branch. The benefits are that this 
    approach allows to get feedback, as well as work on different features separately 
    before incorporating them into the official prject. The benefits of making changes 
    directly on the master branch is that it's simpler and doesn't require any merges.